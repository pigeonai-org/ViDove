# configuration for each task
source_lang: EN
target_lang: ZH
domain: CS:GO

# YouTube Download Option
video_download:
  resolution: 480 # 360, 480, 720, best(best we can find)

MEMEORY: 
  enable_local_knowledge: False
  enable_vision_knowledge: True
  enable_web_search: False
  local_knowledge_path: "/home/macrodove/ViDove/domain_dict"

# VAD config
#VAD:
#  VAD_model: "pyannote/speaker-diarization-3.1"

# ASR config
#ASR:
#  ASR_model: openai/whisper-large-v3 # openai/whisper-large-v3, stable-whisper-base, stable-whisper-medium, stable-whisper-large, whisper-api

audio:
  enable_audio: True
  audio_agent: GeminiAudioAgent # clip or other vLLMs
  model_path:  # replace it with your own model path
  VAD_model: API # pyannote/speaker-diarization-3.1
  src_lang: en
  tgt_lang: zh

vision:
  enable_vision: True
  vision_model: gpt-4o # clip or other vLLMs
  model_path: ./ViDove/vision_model/clip-vit-base-patch16 # replace it with your own model path
  frame_cache_dir: ./cache #should be cleared after task finished
  frame_per_seg: 4 # number of frame extracted from segment
  
# pre-process module config
pre_process: 
  sentence_form: True
  spell_check: False
  term_correct: True

# Translation module config
translation:
  model: gpt-4o # choices=["gpt-3.5-turbo", "gpt-4", "gpt-4o", "Assistant", "Multiagent"]
  chunk_size: 2000

# post-process module config
post_process:
  enable_post_process: True

proofreader: 
  enable_proofreading: True
  window_size: 5 # number of sentences per proofreading chunk
  short_term_memory_len: 5 # maximum number of sentences stored in short term memory
  enable_short_term_memory: False # whether to use short term memory for proofreading
  verbose: True # whether to print the proofreading process

editor:
  enable_editor: True
  user_instruction: None # "Any additional information that can help the editor to improve the translation quality, such as the target audience, tone, and style of the translation. If you don't have any specific requirements, you can leave it empty."
  editor_context_window: 10 # number of sentences to be provided as context for the editor(previous and next {n} sentences)
  history_length: 5 # number of sentences to be provided as history for the editor(previous {n} sentences)

# output type that user receive
output_type: 
  subtitle: srt
  video: True
  bilingual: True


